import { Halo2Wasm, Halo2LibWasm, CircuitConfig, Bn254FqPoint, Bn254G1AffinePoint, Bn254G2AffinePoint, JsCircuitBn254Fq2, JsCircuitBn254G1Affine, JsCircuitBn254G2Affine, JsCircuitSecp256k1Affine, JsCircuitValue256, Secp256k1AffinePoint } from "./halo2_wasm";
import { getKzgParams } from "./kzg";
import { DEFAULT_CIRCUIT_CONFIG } from "../shared";
import { BaseCircuitScaffold } from "../shared/scaffold";
export { CircuitConfig, DEFAULT_CIRCUIT_CONFIG, Halo2Wasm, Halo2LibWasm, getKzgParams, Bn254FqPoint, Bn254G1AffinePoint, Bn254G2AffinePoint, JsCircuitBn254Fq2, JsCircuitBn254G1Affine, JsCircuitBn254G2Affine, JsCircuitSecp256k1Affine, JsCircuitValue256, Secp256k1AffinePoint };
export declare const getHalo2Wasm: (numThreads: number) => Promise<Halo2Wasm>;
export declare const getHalo2LibWasm: (halo2wasm: Halo2Wasm) => Halo2LibWasm;
export declare abstract class CircuitScaffold extends BaseCircuitScaffold {
    constructor(options?: {
        config?: CircuitConfig;
        shouldTime?: boolean;
    });
    setup(numThreads: number): Promise<void>;
}
