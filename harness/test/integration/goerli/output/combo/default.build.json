{
  "vk": "Ag0AAAAABgAAABY1r7+9LC99Zt9EtzUY3fULKNJUkyLxb/sssGEoF28F7Kw2Hs1EiyUi/27eP9WnaS59lAJp5Aavcgkf7raFqC3zj2elO3e5KbhZn4fvVmguSIMiFlzcDqD77aOeG+nkF1ilVc5MhvaZAotPbrWnuFMWZcj2RGxEnc1syIwEKCwG7G96O2UM++3FK6y/RmQQDo4jWhnBKuGrzEfJd7heex8GFKx2ZGIVTo8UgVbFBvBNbkIJWZYDO4McbCKBDJkbEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0sywY80kp43poXEVfFQ9DUe8EUGFrPmMxb9uWZeIoaHxVQygTuKCuei3oCmtbCFjmm84e2cVr3jsfJvlcFCx4Hz8HbItbKscWBbq50yhVLllYIShb6ki9kAfM+0E6pAh9jhR0/rvNzYJv0TtBZ0ELiZeJgRYjNrH8W3otnTmsXgSDdoAIPg/lfNr4zJdJLCnukqtwuAiAAfqKhF3b+CAiRyoXHd845K0f6scr39zHQGDeGzqcOwwVDS+V3XdhLMIF/bYRt26gXnwiikw/38FZsUPjwQZ/t99e+v0bw2l8Pi1TEsfyexOmtFTuLeH7xT7CcFeFio9rI0mpYRyB3hh74EaA3eah8VQXonAvgWXROtS14xt/LnL2gjHVpCjXUJYzK4F/McgXq4xNUA9pTUArPQkgpaFDSrQaTAwPMCdorCcSXcmaQC9BZjM/JlclzslVMc74WOIphrD8ZRS8QLRBoXn1N94bsUDQWUklvSmmBmaBCKkYervFqdkbTCI/JEBOuYmFBKYJhMAn+Ov8V6hGtX/omPs6SzIXUPZghfCslun5rnTLyL5biOmAYOSo1v2xlmJESoRDByNFNwxT8iyg=",
  "config": {
    "k": 13,
    "numAdvice": 4,
    "numLookupAdvice": 1,
    "numInstance": 1,
    "numLookupBits": 12,
    "numVirtualInstance": 2
  },
  "querySchema": "0x480c18adaaf7c304820c77eb8b39728a5cc591ed73a09328916cb78924234548",
  "inputSchema": "eyJhZGRyZXNzIjoiQ2lyY3VpdFZhbHVlIiwiY2xhaW1lZEJsb2NrTnVtYmVyIjoiQ2lyY3VpdFZhbHVlIiwiYmxvY2siOiJDaXJjdWl0VmFsdWUiLCJhZGRyIjoiQ2lyY3VpdFZhbHVlIiwidHhCbG9ja051bWJlciI6IkNpcmN1aXRWYWx1ZSIsInR4SWR4IjoiQ2lyY3VpdFZhbHVlIiwic2xvdCI6IkNpcmN1aXRWYWx1ZSIsIm1hcHBpbmdTbG90IjoiQ2lyY3VpdFZhbHVlIn0=",
  "circuit": "Y29uc3QgY2xpZW50XzEgPSBBWElPTV9DTElFTlRfSU1QT1JUCmFzeW5jICh7IGFkZHJlc3MsIGNsYWltZWRCbG9ja051bWJlciwgYmxvY2ssIGFkZHIsIHR4QmxvY2tOdW1iZXIsIHR4SWR4LCBzbG90LCBtYXBwaW5nU2xvdCwgfSkgPT4gewogICAgLy8KICAgIC8vICAgICAgICAgICAgICAgICBfICAgICAgICAgICAgICAgICBfX19fXyAgX19fX19fIF9fX19fICBfICAgICAgCiAgICAvLyAgICAgL1wgICAgICAgICAoXykgICAgICAgICAgICAgICB8ICBfXyBcfCAgX19fX3wgIF9fIFx8IHwgICAgIAogICAgLy8gICAgLyAgXCAgIF9fICBfX18gIF9fXyAgXyBfXyBfX18gfCB8X18pIHwgfF9fICB8IHxfXykgfCB8ICAgICAKICAgIC8vICAgLyAvXCBcICBcIFwvIC8gfC8gXyBcfCAnXyBgIF8gXHwgIF8gIC98ICBfX3wgfCAgX19fL3wgfCAgICAgCiAgICAvLyAgLyBfX19fIFwgID4gIDx8IHwgKF8pIHwgfCB8IHwgfCB8IHwgXCBcfCB8X19fX3wgfCAgICB8IHxfX19fIAogICAgLy8gL18vICAgIFxfXC9fL1xfXF98XF9fXy98X3wgfF98IHxffF98ICBcX1xfX19fX198X3wgICAgfF9fX19fX3wKICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAvLyBleGFtcGxlIEF4aW9tIFJFUEwgY2lyY3VpdCB0byBwcm92ZSB0aGUgZmlyc3QgYmxvY2sgYW4gYWNjb3VudCB0cmFuc2FjdGVkCiAgICAvLyBnZXQgdGhlIHByZXZpb3VzIGJsb2NrIG51bWJlcgogICAgY29uc3QgcHJldkJsb2NrID0gKDAsIGNsaWVudF8xLnN1YikoY2xhaW1lZEJsb2NrTnVtYmVyLCAoMCwgY2xpZW50XzEuY29uc3RhbnQpKDEpKTsKICAgIC8vZ2V0IHRoZSBhY2NvdW50IGF0IHRoZSBwcmV2aW91cyBibG9jawogICAgY29uc3QgYWNjb3VudFByZXZCbG9jayA9ICgwLCBjbGllbnRfMS5nZXRBY2NvdW50KShwcmV2QmxvY2ssIGFkZHJlc3MpOwogICAgLy8gZ2V0IHRoZSBhY2NvdW50IG5vbmNlIGF0IHRoZSBwcmV2aW91cyBibG9jayBhbmQgYXNzZXJ0IHRoYXQgaXQgaXMgMAogICAgY29uc3QgcHJldk5vbmNlID0gKGF3YWl0IGFjY291bnRQcmV2QmxvY2subm9uY2UoKSkudG9DaXJjdWl0VmFsdWUoKTsKICAgICgwLCBjbGllbnRfMS5jaGVja0VxdWFsKShwcmV2Tm9uY2UsICgwLCBjbGllbnRfMS5jb25zdGFudCkoMCkpOwogICAgLy8gZ2V0IHRoZSBhY2NvdW50IG5vbmNlIGF0IHRoZSBjbGFpbWVkIGJsb2NrIG51bWJlcgogICAgY29uc3QgYWNjb3VudCA9ICgwLCBjbGllbnRfMS5nZXRBY2NvdW50KShjbGFpbWVkQmxvY2tOdW1iZXIsIGFkZHJlc3MpOwogICAgY29uc3QgY3Vyck5vbmNlID0gKGF3YWl0IGFjY291bnQubm9uY2UoKSkudG9DaXJjdWl0VmFsdWUoKTsKICAgIC8vY2hlY2tzIHRoYXQgY3Vyck5vbmNlID4gMCBhdCB0aGUgY2xhaW1lZCBibG9jawogICAgKDAsIGNsaWVudF8xLmNoZWNrTGVzc1RoYW4pKCgwLCBjbGllbnRfMS5jb25zdGFudCkoMCksIGN1cnJOb25jZSk7CiAgICAvLyBhZGQgdGhlIGFkZHJlc3MgYW5kIGJsb2NrTnVtYmVyIHRvIHRoZSBjYWxsYmFjaywgZm9yIGl0IHRvIGJlIHBhc3NlZAogICAgLy8gYXMgYSByZXN1bHQgdG8gdGhlIGNhbGxiYWNrIGNsaWVudCBjb250cmFjdAogICAgKDAsIGNsaWVudF8xLmFkZFRvQ2FsbGJhY2spKGFkZHJlc3MpOwogICAgKDAsIGNsaWVudF8xLmFkZFRvQ2FsbGJhY2spKGNsYWltZWRCbG9ja051bWJlcik7CiAgICAvLyBIZXJlIGlzIGEgbGlzdCBvZiBhbGwgZnVuY3Rpb25zIHlvdSBjYW4gdXNlIHRvIGZldGNoIG9uLWNoYWluIGRhdGEgaW4gdGhlIFJFUEwuCiAgICAvLyBGb3IgbW9yZSBkZXRhaWxlZCBkb2NzIGFuZCBhIGxpc3Qgb2YgYWxsIGRhdGEgYW5kIGNvbXB1dGUgZnVuY3Rpb25zLCBzZWUgb3VyIAogICAgLy8gcHJldmlldyBkb2NzIGF0OgogICAgLy8KICAgIC8vIGh0dHBzOi8vZG9jcy5heGlvbS54eXovc2RrLWFuZC1yZXBsLXJlZmVyZW5jZS9heGlvbXJlcGwtcmVmZXJlbmNlCiAgICAvLwogICAgLy8gZmV0Y2ggYmxvY2sgaGVhZGVyIGRhdGEKICAgIGxldCBoZWFkZXIgPSAoMCwgY2xpZW50XzEuZ2V0SGVhZGVyKShibG9jayk7CiAgICAvLyBhY2Nlc3MgdGhlIHRpbWVzdGFtcCBmaWVsZAogICAgbGV0IHRpbWVzdGFtcCA9IGF3YWl0IGhlYWRlci50aW1lc3RhbXAoKTsKICAgIC8vIGFjY2VzcyB0aGUgZ2FzTGltaXQgZmllbGQKICAgIGxldCBnYXNMaW1pdCA9IGF3YWl0IGhlYWRlci5nYXNMaW1pdCgpOwogICAgLy8gZmV0Y2ggYWNjb3VudCBkYXRhCiAgICBsZXQgYWNjdCA9ICgwLCBjbGllbnRfMS5nZXRBY2NvdW50KShibG9jaywgYWRkcik7CiAgICAvLyBhY2Nlc3MgdGhlIGFjY291bnQgYmFsYW5jZSBhdCBgYmxvY2tgCiAgICBsZXQgYmFsYW5jZSA9IGF3YWl0IGFjY3QuYmFsYW5jZSgpOwogICAgLy8gYWNjZXNzIHRoZSBub25jZSBvZiB0aGUgYWNjb3VudCBhdCBgYmxvY2tgCiAgICBsZXQgbm9uY2UgPSBhd2FpdCBhY2N0Lm5vbmNlKCk7CiAgICAvLyBmZXRjaCBzdG9yYWdlIGRhdGEKICAgIGxldCBzdG9yYWdlID0gKDAsIGNsaWVudF8xLmdldFN0b3JhZ2UpKGJsb2NrLCBhZGRyKTsKICAgIC8vIGFjY2VzcyB0aGUgdmFsdWUgYXQgc3RvcmFnZSBzbG90IGBzbG90YAogICAgbGV0IHNsb3RWYWwgPSBhd2FpdCBzdG9yYWdlLnNsb3Qoc2xvdCk7CiAgICAvLyBmZXRjaCBTb2xpZGl0eSBtYXBwaW5nIGRhdGEKICAgIGxldCBtYXBwaW5nID0gKDAsIGNsaWVudF8xLmdldFNvbGlkaXR5TWFwcGluZykoYmxvY2ssIGFkZHIsIG1hcHBpbmdTbG90KTsKICAgIC8vIGFjY2VzcyB0aGUgdmFsdWUgaW4gdGhlIG1hcHBpbmcgYXQgYG1hcHBpbmdTbG90YCB3aXRoIGtleSBgM2AKICAgIGxldCBtYXBwaW5nVmFsID0gYXdhaXQgbWFwcGluZy5rZXkoMyk7CiAgICAvLyBmZXRjaCB0cmFuc2FjdGlvbiBkYXRhLCBleGFtcGxlIGlzIGZvciB0aGUgdHJhbnNhY3Rpb24gYmVsb3c6CiAgICAvLyBodHRwczovL2dvZXJsaS5ldGhlcnNjYW4uaW8vdHgvMHhhNGY3ODFhZDAzM2Q2ZGFiNWIxM2UzYWI3YzdjYmRiZDBlYTRjMGEyYmUzZDlmZmE3ZWQxZTUzZDJkNWJjYzQ2CiAgICBsZXQgdHggPSAoMCwgY2xpZW50XzEuZ2V0VHgpKHR4QmxvY2tOdW1iZXIsIHR4SWR4KTsKICAgIC8vIGdldCB0aGUgNC1ieXRlIGZ1bmN0aW9uIHNlbGVjdG9yIHRoYXQgd2FzIGNhbGxlZAogICAgbGV0IGZ1bmN0aW9uU2VsZWN0b3IgPSBhd2FpdCB0eC5mdW5jdGlvblNlbGVjdG9yKCk7CiAgICAvLyBhY2Nlc3MgYnl0ZXMgWzMyLCA2NCkgb2YgY2FsbGRhdGEKICAgIGxldCBjYWxsZGF0YSA9IGF3YWl0IHR4LmNhbGxkYXRhKDEpOwogICAgLy8gZmV0Y2ggcmVjZWlwdCBkYXRhLCBleGFtcGxlIGlzIGZvciB0aGUgZmlyc3QgZXZlbnQgbG9nIGluIHRoZSB0cmFuc2FjdGlvbiBiZWxvdwogICAgLy8gRGVwb3NpdCAoaW5kZXhfdG9waWNfMSBhZGRyZXNzIHBheW9yLCB1aW50MjU2IGFtdCkKICAgIC8vIGh0dHBzOi8vZ29lcmxpLmV0aGVyc2Nhbi5pby90eC8weGE0Zjc4MWFkMDMzZDZkYWI1YjEzZTNhYjdjN2NiZGJkMGVhNGMwYTJiZTNkOWZmYTdlZDFlNTNkMmQ1YmNjNDYKICAgIC8vIGV2ZW50U2NoZW1hID0ga2VjY2FrKERlcG9zaXQoYWRkcmVzcyx1aW50MjU2KSkKICAgIGNvbnN0IGV2ZW50U2NoZW1hID0gIjB4ZTFmZmZjYzQ5MjNkMDRiNTU5ZjRkMjlhOGJmYzZjZGEwNGViNWIwZDNjNDYwNzUxYzI0MDJjNWM1Y2M5MTA5YyI7CiAgICBsZXQgcmVjZWlwdCA9ICgwLCBjbGllbnRfMS5nZXRSZWNlaXB0KSh0eEJsb2NrTnVtYmVyLCB0eElkeCk7CiAgICAvLyBhY2Nlc3MgdGhlIGFkZHJlc3MgdGhhdCBlbWl0dGVkIHRoZSBsb2cgZXZlbnQgYXQgaW5kZXggMAogICAgbGV0IGxvZ0FkZHIgPSBhd2FpdCByZWNlaXB0LmxvZygwKS5hZGRyZXNzKCk7CiAgICAvLyBhY2Nlc3MgdGhlIHRvcGljIGF0IGluZGV4IDEgb2YgdGhlIGxvZyBldmVudCBhdCBpbmRleCAwIGFuZCBjaGVjayBpdCBoYXMgc2NoZW1hIGV2ZW50U2NoZW1hCiAgICAvLyBiZWNhdXNlIGBhZGRyZXNzYCBpcyBpbmRleGVkIGluIHRoZSBldmVudCwgdGhpcyBjb3JyZXNwb25kcyB0byBgYWRkcmVzc2AKICAgIGxldCB0b3BpYyA9IGF3YWl0IHJlY2VpcHQubG9nKDApLnRvcGljKDEsIGV2ZW50U2NoZW1hKTsKICAgIC8vIGFjY2VzcyB0aGUgZmlyc3QgMzIgYnl0ZXMgb2YgZGF0YSBpbiB0aGUgbG9nIGV2ZW50IGF0IGluZGV4IDAKICAgIC8vIGJlY2F1c2UgYGFtdGAgaXMgbm90IGluZGV4ZWQsIHRoaXMgY29ycmVzcG9uZHMgdG8gYGFtdGAKICAgIGxldCBkYXRhID0gYXdhaXQgcmVjZWlwdC5sb2coMCkuZGF0YSgwKTsKfQ=="
}