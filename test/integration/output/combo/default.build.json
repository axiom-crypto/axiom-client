{
  "vk": "Ag0AAAAABgAAABY1r7+9LC99Zt9EtzUY3fULKNJUkyLxb/sssGEoF28F7Kw2Hs1EiyUi/27eP9WnaS59lAJp5Aavcgkf7raFqC3zj2elO3e5KbhZn4fvVmguSIMiFlzcDqD77aOeG+nkF1ilVc5MhvaZAotPbrWnuFMWZcj2RGxEnc1syIwEKCwG7G96O2UM++3FK6y/RmQQDo4jWhnBKuGrzEfJd7heex8GFKx2ZGIVTo8UgVbFBvBNbkIJWZYDO4McbCKBDJkbEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0sywY80kp43poXEVfFQ9DUe8EUGFrPmMxb9uWZeIoaHxVQygTuKCuei3oCmtbCFjmm84e2cVr3jsfJvlcFCx4Hz8HbItbKscWBbq50yhVLllYIShb6ki9kAfM+0E6pAh9jhR0/rvNzYJv0TtBZ0ELiZeJgRYjNrH8W3otnTmsXgSDdoAIPg/lfNr4zJdJLCnukqtwuAiAAfqKhF3b+CAiRyoXHd845K0f6scr39zHQGDeGzqcOwwVDS+V3XdhLMIF/bYRt26gXnwiikw/38FZsUPjwQZ/t99e+v0bw2l8Pi1TEsfyexOmtFTuLeH7xT7CcFeFio9rI0mpYRyB3hh74EaA3eah8VQXonAvgWXROtS14xt/LnL2gjHVpCjXUJYzK4F/McgXq4xNUA9pTUArPQkgpaFDSrQaTAwPMCdorCcSXcmaQC9BZjM/JlclzslVMc74WOIphrD8ZRS8QLRBoXn1N94bsUDQWUklvSmmBmaBCKkYervFqdkbTCI/JEBOuYmFBKYJhMAn+Ov8V6hGtX/omPs6SzIXUPZghfCslun5rnTLyL5biOmAYOSo1v2xlmJESoRDByNFNwxT8iyg=",
  "config": {
    "k": 13,
    "numAdvice": 4,
    "numLookupAdvice": 1,
    "numInstance": 1,
    "numLookupBits": 12,
    "numVirtualInstance": 2
  },
  "querySchema": "0x480c18adaaf7c304820c77eb8b39728a5cc591ed73a09328916cb78924234548",
  "inputSchema": "eyJhZGRyZXNzIjoiQ2lyY3VpdFZhbHVlIiwiY2xhaW1lZEJsb2NrTnVtYmVyIjoiQ2lyY3VpdFZhbHVlIiwiYmxvY2siOiJDaXJjdWl0VmFsdWUiLCJhZGRyIjoiQ2lyY3VpdFZhbHVlIiwidHhCbG9ja051bWJlciI6IkNpcmN1aXRWYWx1ZSIsInR4SWR4IjoiQ2lyY3VpdFZhbHVlIiwic2xvdCI6IkNpcmN1aXRWYWx1ZSIsIm1hcHBpbmdTbG90IjoiQ2lyY3VpdFZhbHVlIn0=",
  "circuit": "Y29uc3QgY2xpZW50XzEgPSBBWElPTV9DTElFTlRfSU1QT1JUCmFzeW5jICh7IGFkZHJlc3MsIGNsYWltZWRCbG9ja051bWJlciwgYmxvY2ssIGFkZHIsIHR4QmxvY2tOdW1iZXIsIHR4SWR4LCBzbG90LCBtYXBwaW5nU2xvdCB9KSA9PiB7CiAgICAvLwogICAgLy8gICAgICAgICAgICAgICAgIF8gICAgICAgICAgICAgICAgIF9fX19fICBfX19fX18gX19fX18gIF8gICAgICAKICAgIC8vICAgICAvXCAgICAgICAgIChfKSAgICAgICAgICAgICAgIHwgIF9fIFx8ICBfX19ffCAgX18gXHwgfCAgICAgCiAgICAvLyAgICAvICBcICAgX18gIF9fXyAgX19fICBfIF9fIF9fXyB8IHxfXykgfCB8X18gIHwgfF9fKSB8IHwgICAgIAogICAgLy8gICAvIC9cIFwgIFwgXC8gLyB8LyBfIFx8ICdfIGAgXyBcfCAgXyAgL3wgIF9ffCB8ICBfX18vfCB8ICAgICAKICAgIC8vICAvIF9fX18gXCAgPiAgPHwgfCAoXykgfCB8IHwgfCB8IHwgfCBcIFx8IHxfX19ffCB8ICAgIHwgfF9fX18gCiAgICAvLyAvXy8gICAgXF9cL18vXF9cX3xcX19fL3xffCB8X3wgfF98X3wgIFxfXF9fX19fX3xffCAgICB8X19fX19ffAogICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIC8vIGV4YW1wbGUgQXhpb20gUkVQTCBjaXJjdWl0IHRvIHByb3ZlIHRoZSBmaXJzdCBibG9jayBhbiBhY2NvdW50IHRyYW5zYWN0ZWQKICAgIC8vIGdldCB0aGUgcHJldmlvdXMgYmxvY2sgbnVtYmVyCiAgICBjb25zdCBwcmV2QmxvY2sgPSAoMCwgY2xpZW50XzEuc3ViKShjbGFpbWVkQmxvY2tOdW1iZXIsICgwLCBjbGllbnRfMS5jb25zdGFudCkoMSkpOwogICAgLy9nZXQgdGhlIGFjY291bnQgYXQgdGhlIHByZXZpb3VzIGJsb2NrCiAgICBjb25zdCBhY2NvdW50UHJldkJsb2NrID0gKDAsIGNsaWVudF8xLmdldEFjY291bnQpKHByZXZCbG9jaywgYWRkcmVzcyk7CiAgICAvLyBnZXQgdGhlIGFjY291bnQgbm9uY2UgYXQgdGhlIHByZXZpb3VzIGJsb2NrIGFuZCBhc3NlcnQgdGhhdCBpdCBpcyAwCiAgICBjb25zdCBwcmV2Tm9uY2UgPSAoYXdhaXQgYWNjb3VudFByZXZCbG9jay5ub25jZSgpKS50b0NpcmN1aXRWYWx1ZSgpOwogICAgKDAsIGNsaWVudF8xLmNoZWNrRXF1YWwpKHByZXZOb25jZSwgKDAsIGNsaWVudF8xLmNvbnN0YW50KSgwKSk7CiAgICAvLyBnZXQgdGhlIGFjY291bnQgbm9uY2UgYXQgdGhlIGNsYWltZWQgYmxvY2sgbnVtYmVyCiAgICBjb25zdCBhY2NvdW50ID0gKDAsIGNsaWVudF8xLmdldEFjY291bnQpKGNsYWltZWRCbG9ja051bWJlciwgYWRkcmVzcyk7CiAgICBjb25zdCBjdXJyTm9uY2UgPSAoYXdhaXQgYWNjb3VudC5ub25jZSgpKS50b0NpcmN1aXRWYWx1ZSgpOwogICAgLy9jaGVja3MgdGhhdCBjdXJyTm9uY2UgPiAwIGF0IHRoZSBjbGFpbWVkIGJsb2NrCiAgICAoMCwgY2xpZW50XzEuY2hlY2tMZXNzVGhhbikoKDAsIGNsaWVudF8xLmNvbnN0YW50KSgwKSwgY3Vyck5vbmNlKTsKICAgIC8vIGFkZCB0aGUgYWRkcmVzcyBhbmQgYmxvY2tOdW1iZXIgdG8gdGhlIGNhbGxiYWNrLCBmb3IgaXQgdG8gYmUgcGFzc2VkCiAgICAvLyBhcyBhIHJlc3VsdCB0byB0aGUgY2FsbGJhY2sgY2xpZW50IGNvbnRyYWN0CiAgICAoMCwgY2xpZW50XzEuYWRkVG9DYWxsYmFjaykoYWRkcmVzcyk7CiAgICAoMCwgY2xpZW50XzEuYWRkVG9DYWxsYmFjaykoY2xhaW1lZEJsb2NrTnVtYmVyKTsKICAgIC8vIEhlcmUgaXMgYSBsaXN0IG9mIGFsbCBmdW5jdGlvbnMgeW91IGNhbiB1c2UgdG8gZmV0Y2ggb24tY2hhaW4gZGF0YSBpbiB0aGUgUkVQTC4KICAgIC8vIEZvciBtb3JlIGRldGFpbGVkIGRvY3MgYW5kIGEgbGlzdCBvZiBhbGwgZGF0YSBhbmQgY29tcHV0ZSBmdW5jdGlvbnMsIHNlZSBvdXIgCiAgICAvLyBwcmV2aWV3IGRvY3MgYXQ6CiAgICAvLwogICAgLy8gaHR0cHM6Ly9kb2NzLmF4aW9tLnh5ei9zZGstYW5kLXJlcGwtcmVmZXJlbmNlL2F4aW9tcmVwbC1yZWZlcmVuY2UKICAgIC8vCiAgICAvLyBmZXRjaCBibG9jayBoZWFkZXIgZGF0YQogICAgbGV0IGhlYWRlciA9ICgwLCBjbGllbnRfMS5nZXRIZWFkZXIpKGJsb2NrKTsKICAgIC8vIGFjY2VzcyB0aGUgdGltZXN0YW1wIGZpZWxkCiAgICBsZXQgdGltZXN0YW1wID0gYXdhaXQgaGVhZGVyLnRpbWVzdGFtcCgpOwogICAgLy8gYWNjZXNzIHRoZSBnYXNMaW1pdCBmaWVsZAogICAgbGV0IGdhc0xpbWl0ID0gYXdhaXQgaGVhZGVyLmdhc0xpbWl0KCk7CiAgICAvLyBmZXRjaCBhY2NvdW50IGRhdGEKICAgIGxldCBhY2N0ID0gKDAsIGNsaWVudF8xLmdldEFjY291bnQpKGJsb2NrLCBhZGRyKTsKICAgIC8vIGFjY2VzcyB0aGUgYWNjb3VudCBiYWxhbmNlIGF0IGBibG9ja2AKICAgIGxldCBiYWxhbmNlID0gYXdhaXQgYWNjdC5iYWxhbmNlKCk7CiAgICAvLyBhY2Nlc3MgdGhlIG5vbmNlIG9mIHRoZSBhY2NvdW50IGF0IGBibG9ja2AKICAgIGxldCBub25jZSA9IGF3YWl0IGFjY3Qubm9uY2UoKTsKICAgIC8vIGZldGNoIHN0b3JhZ2UgZGF0YQogICAgbGV0IHN0b3JhZ2UgPSAoMCwgY2xpZW50XzEuZ2V0U3RvcmFnZSkoYmxvY2ssIGFkZHIpOwogICAgLy8gYWNjZXNzIHRoZSB2YWx1ZSBhdCBzdG9yYWdlIHNsb3QgYHNsb3RgCiAgICBsZXQgc2xvdFZhbCA9IGF3YWl0IHN0b3JhZ2Uuc2xvdChzbG90KTsKICAgIC8vIGZldGNoIFNvbGlkaXR5IG1hcHBpbmcgZGF0YQogICAgbGV0IG1hcHBpbmcgPSAoMCwgY2xpZW50XzEuZ2V0U29saWRpdHlNYXBwaW5nKShibG9jaywgYWRkciwgbWFwcGluZ1Nsb3QpOwogICAgLy8gYWNjZXNzIHRoZSB2YWx1ZSBpbiB0aGUgbWFwcGluZyBhdCBgbWFwcGluZ1Nsb3RgIHdpdGgga2V5IGAzYAogICAgbGV0IG1hcHBpbmdWYWwgPSBhd2FpdCBtYXBwaW5nLmtleSgzKTsKICAgIC8vIGZldGNoIHRyYW5zYWN0aW9uIGRhdGEsIGV4YW1wbGUgaXMgZm9yIHRoZSB0cmFuc2FjdGlvbiBiZWxvdzoKICAgIC8vIGh0dHBzOi8vZ29lcmxpLmV0aGVyc2Nhbi5pby90eC8weGE0Zjc4MWFkMDMzZDZkYWI1YjEzZTNhYjdjN2NiZGJkMGVhNGMwYTJiZTNkOWZmYTdlZDFlNTNkMmQ1YmNjNDYKICAgIGxldCB0eCA9ICgwLCBjbGllbnRfMS5nZXRUeCkodHhCbG9ja051bWJlciwgdHhJZHgpOwogICAgLy8gZ2V0IHRoZSA0LWJ5dGUgZnVuY3Rpb24gc2VsZWN0b3IgdGhhdCB3YXMgY2FsbGVkCiAgICBsZXQgZnVuY3Rpb25TZWxlY3RvciA9IGF3YWl0IHR4LmZ1bmN0aW9uU2VsZWN0b3IoKTsKICAgIC8vIGFjY2VzcyBieXRlcyBbMzIsIDY0KSBvZiBjYWxsZGF0YQogICAgbGV0IGNhbGxkYXRhID0gYXdhaXQgdHguY2FsbGRhdGEoMSk7CiAgICAvLyBmZXRjaCByZWNlaXB0IGRhdGEsIGV4YW1wbGUgaXMgZm9yIHRoZSBmaXJzdCBldmVudCBsb2cgaW4gdGhlIHRyYW5zYWN0aW9uIGJlbG93CiAgICAvLyBEZXBvc2l0IChpbmRleF90b3BpY18xIGFkZHJlc3MgcGF5b3IsIHVpbnQyNTYgYW10KQogICAgLy8gaHR0cHM6Ly9nb2VybGkuZXRoZXJzY2FuLmlvL3R4LzB4YTRmNzgxYWQwMzNkNmRhYjViMTNlM2FiN2M3Y2JkYmQwZWE0YzBhMmJlM2Q5ZmZhN2VkMWU1M2QyZDViY2M0NgogICAgLy8gZXZlbnRTY2hlbWEgPSBrZWNjYWsoRGVwb3NpdChhZGRyZXNzLHVpbnQyNTYpKQogICAgY29uc3QgZXZlbnRTY2hlbWEgPSAiMHhlMWZmZmNjNDkyM2QwNGI1NTlmNGQyOWE4YmZjNmNkYTA0ZWI1YjBkM2M0NjA3NTFjMjQwMmM1YzVjYzkxMDljIjsKICAgIGxldCByZWNlaXB0ID0gKDAsIGNsaWVudF8xLmdldFJlY2VpcHQpKHR4QmxvY2tOdW1iZXIsIHR4SWR4KTsKICAgIC8vIGFjY2VzcyB0aGUgYWRkcmVzcyB0aGF0IGVtaXR0ZWQgdGhlIGxvZyBldmVudCBhdCBpbmRleCAwCiAgICBsZXQgbG9nQWRkciA9IGF3YWl0IHJlY2VpcHQubG9nKDApLmFkZHJlc3MoKTsKICAgIC8vIGFjY2VzcyB0aGUgdG9waWMgYXQgaW5kZXggMSBvZiB0aGUgbG9nIGV2ZW50IGF0IGluZGV4IDAgYW5kIGNoZWNrIGl0IGhhcyBzY2hlbWEgZXZlbnRTY2hlbWEKICAgIC8vIGJlY2F1c2UgYGFkZHJlc3NgIGlzIGluZGV4ZWQgaW4gdGhlIGV2ZW50LCB0aGlzIGNvcnJlc3BvbmRzIHRvIGBhZGRyZXNzYAogICAgbGV0IHRvcGljID0gYXdhaXQgcmVjZWlwdC5sb2coMCkudG9waWMoMSwgZXZlbnRTY2hlbWEpOwogICAgLy8gYWNjZXNzIHRoZSBmaXJzdCAzMiBieXRlcyBvZiBkYXRhIGluIHRoZSBsb2cgZXZlbnQgYXQgaW5kZXggMAogICAgLy8gYmVjYXVzZSBgYW10YCBpcyBub3QgaW5kZXhlZCwgdGhpcyBjb3JyZXNwb25kcyB0byBgYW10YAogICAgbGV0IGRhdGEgPSBhd2FpdCByZWNlaXB0LmxvZygwKS5kYXRhKDApOwp9"
}